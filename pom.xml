<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2016 Studentmediene i Trondheim AS
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>no.dusken.momus</groupId>
    <artifactId>momus</artifactId>
    <version>1.11.0</version>
    <packaging>war</packaging>

    <!-- Some boilerplate info -->
    <name>Momus</name>
    <description>A web client for journalists</description>
    <url>https://momus.smint.no</url>
    <inceptionYear>2013</inceptionYear>
    <organization>
        <name>Studentmediene i Trondheim AS</name>
        <url>http://studentmediene.no/</url>
    </organization>
    <issueManagement>
        <system>JIRA</system>
        <url>https://http://jira.smint.no</url>
    </issueManagement>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <!-- Properties here -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <java.version>1.8</java.version>

        <lombok.version>1.18.2</lombok.version>
        <spring.version>4.3.20.RELEASE</spring.version>
        <spring-data.version>1.11.16.RELEASE</spring-data.version>
        <spring-ldap.version>2.0.2.RELEASE</spring-ldap.version>
        <spring-security.version>4.2.9.RELEASE</spring-security.version>
        <spring-security-saml2.version>1.0.3.RELEASE</spring-security-saml2.version>
        <hibernate.version>5.3.7.Final</hibernate.version>
        <jackson.version>2.9.7</jackson.version>
        <commons-dbcp2.version>2.5.0</commons-dbcp2.version>
        <liquibase.version>3.6.2</liquibase.version>
        <google-drive.version>v2-rev277-1.22.0</google-drive.version>
        <commons-lang3.version>3.6</commons-lang3.version>

        <javax-servlet.version>3.1.0</javax-servlet.version>
        <jetty.version>9.4.7.v20180619</jetty.version>
        <maven-war-plugin.version>3.1.0</maven-war-plugin.version>
        
        <junit.version>4.12</junit.version>
        <mockito.version>2.20.1</mockito.version>
        <hamcrest-all.version>1.3</hamcrest-all.version>
        <json-path.version>2.4.0</json-path.version>
        <tomcat-embed-websocket.version>9.0.12</tomcat-embed-websocket.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <janino.version>3.0.10</janino.version>
        <maven-surefire.version>2.22.1</maven-surefire.version>

        <mysql.version>6.0.6</mysql.version>
        <postgresql.version>42.2.5</postgresql.version>
        <h2.version>1.4.194</h2.version>

        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
    </properties>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <build.profile.id>dev</build.profile.id>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <build.profile.id>prod</build.profile.id>
            </properties>
        </profile>
    </profiles>

    <!-- Add the dependencies to be downloaded here -->
    <dependencies>
        <!-- Spring Framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${spring-data.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.ldap</groupId>
            <artifactId>spring-ldap-core</artifactId>
            <version>${spring-ldap.version}</version>
        </dependency>

        <!-- Security (authentication and authorization) -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.extensions</groupId>
            <artifactId>spring-security-saml2-core</artifactId>
            <version>${spring-security-saml2.version}</version>
        </dependency>        

        <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest-all.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
            <version>${json-path.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-websocket</artifactId>
            <version>${tomcat-embed-websocket.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>
        <!-- Needed for if-else in Logback's xml file -->
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>${janino.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!-- JSON mapper -->
        <dependency><!-- This is Jackson JSON mapper with some modifications to work with Hibernate -->
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-hibernate5</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Database -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>${commons-dbcp2.version}</version>
        </dependency>

        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>

        <!-- Various DB drivers -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!-- Google Drive API -->
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-drive</artifactId>
            <version>${google-drive.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <!-- Only for the redirect in index.jsp ... -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax-servlet.version}</version>
        </dependency>

        <!-- For data classes and reduction of boilerplate, mainly in models -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <filters>
            <filter>src/main/filters/${build.profile.id}.properties</filter>
            <filter>src/main/filters/local.properties</filter>
        </filters>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <!-- Filter our .properties files -->
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>momus.properties</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <!-- Configuration of how the project should be compiled -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <version>${maven-compiler-plugin.version}</version>
            </plugin>
            <!-- Lets us run and test the project easily in a server -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <webApp>
                        <resourceBases>
                            <resourceBase>webapp/dist</resourceBase>
                            <resourceBase>webapp-beta/dist</resourceBase>
                            <!-- Must be included for WEB-INF -->
                            <resourceBase>src/main/webapp</resourceBase>
                        </resourceBases>
                    </webApp>
                </configuration>
            </plugin>
            <!-- Control how the application is built -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <configuration>
                    <!-- Only keep the WEB-INF folder in the war -->
                    <warSourceIncludes>
                        WEB-INF/**
                    </warSourceIncludes>

                    <failOnMissingWebXml>false</failOnMissingWebXml>

                    <!-- include the content of the dist folders built by webpack -->
                    <webResources>
                        <resource>
                            <directory>webapp-beta/dist</directory>
                        </resource>
                        <resource>
                            <directory>webapp/dist</directory>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <!-- Teest reporting -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit4</artifactId>
                        <version>${maven-surefire.version}</version>
                    </dependency>
                </dependencies>
            </plugin> 
        </plugins>
    </build>
</project>